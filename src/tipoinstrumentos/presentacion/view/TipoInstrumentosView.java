/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tipoinstrumentos.presentacion.view;

import java.util.Observable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import applicationpresentacion.Application;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import tipoinstrumentos.presentacion.controller.TipoInstrumentosController;
import tipoinstrumentos.presentacion.model.TipoInstrumentosModel;

/**
 *
 * @author pc
 */
public class TipoInstrumentosView extends javax.swing.JInternalFrame implements java.util.Observer {

    /**
     * Creates new form TipoInstrumentosView
     */
    
    TipoInstrumentosController control;
    TipoInstrumentosModel model;
    
     public TipoInstrumentosController getControl() {
        return control;
    }

    public void setControl(TipoInstrumentosController control) {
        this.control = control;
    }

    public TipoInstrumentosModel getModel() {
        return model;
    }

    public void setModel(TipoInstrumentosModel model) {
        this.model = model;
        
        model.addObserver(this);
    }
    
    
    
    
    public TipoInstrumentosView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        descripcionLabel = new javax.swing.JLabel();
        descripcionField = new javax.swing.JTextField();
        btnBuscarInstrumento = new javax.swing.JButton();
        btnAgregarEstados = new javax.swing.JButton();
        btnEliminarInstrumento = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tipoInstrumentoTable = new javax.swing.JTable();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("Tipo Instrumentos");
        setVisible(true);

        descripcionLabel.setText("Descripcion");

        btnBuscarInstrumento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/view/icons/search.png"))); // NOI18N
        btnBuscarInstrumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarInstrumentoActionPerformed(evt);
            }
        });

        btnAgregarEstados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/view/icons/add.png"))); // NOI18N
        btnAgregarEstados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarEstadosActionPerformed(evt);
            }
        });

        btnEliminarInstrumento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/view/icons/delete.png"))); // NOI18N
        btnEliminarInstrumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarInstrumentoActionPerformed(evt);
            }
        });

        tipoInstrumentoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        tipoInstrumentoTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tipoInstrumentoTableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tipoInstrumentoTableMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(tipoInstrumentoTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAgregarEstados, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(descripcionLabel)
                        .addGap(26, 26, 26)
                        .addComponent(descripcionField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(btnBuscarInstrumento, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(133, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEliminarInstrumento, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descripcionLabel)
                    .addComponent(descripcionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarInstrumento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAgregarEstados, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(btnEliminarInstrumento)
                        .addGap(76, 76, 76))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarInstrumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarInstrumentoActionPerformed

        this.tipoInstrumentoTable.clearSelection();
        control.buscar();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarInstrumentoActionPerformed

    private void btnAgregarEstadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarEstadosActionPerformed

         Application.TIPOINSTRUMENTO_VIEW.setLocation(this.btnAgregarEstados.getLocationOnScreen());
         Application.TIPOINSTRUMENTO_VIEW.codigoFld.setEditable(true);
         int row = this.tipoInstrumentoTable.getSelectedRow();
         
        
        control.preAgregar();


        // TODO add your handling code here:
    }//GEN-LAST:event_btnAgregarEstadosActionPerformed

    private void btnEliminarInstrumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarInstrumentoActionPerformed
        
        
        int row = this.tipoInstrumentoTable.getSelectedRow();
        
        if(row != -1){
        
            if(JOptionPane.showConfirmDialog(null , "Esta seguro", "Borrar Instrumento" ,  JOptionPane.YES_NO_OPTION ) == JOptionPane.YES_OPTION){
            
                try {
                    control.borrar(row);
                } catch (Exception ex) {
                    Logger.getLogger(TipoInstrumentoView.class.getName()).log(Level.SEVERE, null, ex);
                }
                control.buscar();
            }
        
        
        }
    
        

// TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarInstrumentoActionPerformed

    
    
    
    private void tipoInstrumentoTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tipoInstrumentoTableMouseClicked

         if (evt.getClickCount() == 2) {
        int row = this.tipoInstrumentoTable.getSelectedRow();
        Application.TIPOINSTRUMENTO_VIEW.setLocation(evt.getLocationOnScreen());
        
        this.tipoInstrumentoTable.setAutoCreateRowSorter(true);
             try {
                 control.editar(row);
             } catch (Exception ex) {
                 Logger.getLogger(TipoInstrumentosView.class.getName()).log(Level.SEVERE, null, ex);
             }
      }


        // TODO add your handling code here:
    }//GEN-LAST:event_tipoInstrumentoTableMouseClicked

    private void tipoInstrumentoTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tipoInstrumentoTableMouseEntered

        control.buscar();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoInstrumentoTableMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TipoInstrumentosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TipoInstrumentosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TipoInstrumentosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TipoInstrumentosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TipoInstrumentosView().setVisible(true);
            }
        });
    }

    @Override
    public void update(Observable o, Object o1) {
     
           
        
        if(model.getErrores().get("descripcionField")!= null){
        
          
            descripcionLabel.setToolTipText(model.getErrores().get("descripcionField"));
        
        
        } else {
        
            descripcionLabel.setBorder(null);
            descripcionLabel.setToolTipText("");
        
        
        }
        
        tipoInstrumentoTable.setModel(model.getEstados());
        this.revalidate();
        if(!model.getMensaje().equals("")){
        
            JOptionPane.showMessageDialog(this, model.getMensaje(), "", JOptionPane.INFORMATION_MESSAGE);
        
        }
        
        
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarEstados;
    private javax.swing.JButton btnBuscarInstrumento;
    private javax.swing.JButton btnEliminarInstrumento;
    public javax.swing.JTextField descripcionField;
    private javax.swing.JLabel descripcionLabel;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tipoInstrumentoTable;
    // End of variables declaration//GEN-END:variables
}
